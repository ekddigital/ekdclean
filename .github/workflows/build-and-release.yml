name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [main]

env:
  NODE_VERSION: "22.x"

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Install renderer dependencies
        working-directory: packages/renderer
        run: npm ci
      - name: Build main process
        run: npm run build:main
      - name: Build renderer process
        run: npm run build:renderer
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}-${{ github.sha }}
          path: |
            dist/
            packages/renderer/dist/
          retention-days: 7

  release:
    name: Release for ${{ matrix.config.os }}
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: mac
          - os: windows-latest
            platform: win
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Install renderer dependencies
        working-directory: packages/renderer
        run: npm ci
      - name: Build and Package (macOS)
        if: matrix.config.platform == 'mac'
        run: npm run package:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false
      - name: Build and Package (Windows)
        if: matrix.config.platform == 'win'
        run: npm run package:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Package (Linux)
        if: matrix.config.platform == 'linux'
        run: npm run package:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## ðŸš€ EKD Clean ${{ github.ref_name }}

            **Built by EKD Digital** - Superior to CleanMyMac

            ### ðŸ“¦ Downloads
            - **macOS**: Download the .dmg file
            - **Windows**: Download the .exe installer
            - **Linux**: Choose .AppImage, .deb, or .rpm

            ### ðŸ”§ Installation
            1. Download the file for your OS
            2. Run the installer
            3. Launch EKD Clean!
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
